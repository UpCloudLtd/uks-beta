openapi: 3.0.3
info:
  contact:
    email: hello@upcloud.com
    name: UpCloud Orchestration team
    url: https://github.com/UpCloudLtd/
  description: API for UpCloud Kubernetes Service (UKS), available under /1.3/kubernetes
  title: UpCloud Kubernetes Service
  version: 0.7.0
servers:
  - description: UpCloud API
    url: "https://api.upcloud.com/1.3/kubernetes"
paths:
  /:
    get:
      description: Get a list of clusters
      operationId: getClusters
      responses:
        "200":
          $ref: "#/components/responses/getClusters"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unAuthorized"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - cluster
    post:
      description: Create a new cluster
      operationId: postCluster
      requestBody:
        $ref: "#/components/requestBodies/postCluster"
      responses:
        "201":
          $ref: "#/components/responses/postCluster"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "422":
          $ref: "#/components/responses/unProcessableEntity"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - cluster
  /{uuid}:
    delete:
      description: Delete an existing cluster
      operationId: deleteCluster
      responses:
        "202":
          $ref: "#/components/responses/deleteCluster"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - cluster
    get:
      description: Get an existing cluster
      operationId: getCluster
      responses:
        "200":
          $ref: "#/components/responses/getCluster"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - cluster
    parameters:
      - $ref: "#/components/parameters/uuid"
  /{uuid}/kubeconfig:
    get:
      description: Get kubeconfig of a cluster
      operationId: getClusterKubeconfig
      responses:
        "200":
          $ref: "#/components/responses/getClusterKubeconfig"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - cluster
    parameters:
      - $ref: "#/components/parameters/uuid"
  /{uuid}/node-groups:
    get:
      description: Get existing node groups of a cluster
      operationId: getNodeGroups
      responses:
        "200":
          $ref: "#/components/responses/getNodeGroups"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - nodeGroup
    post:
      description: Create a node group to a cluster
      operationId: postNodeGroup
      requestBody:
        $ref: "#/components/requestBodies/postNodeGroup"
      responses:
        "201":
          $ref: "#/components/responses/postNodeGroup"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "422":
          $ref: "#/components/responses/unProcessableEntity"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - nodeGroup
    parameters:
      - $ref: "#/components/parameters/uuid"
  /{uuid}/node-groups/{name}:
    get:
      description: Get an existing node group of a cluster
      operationId: getNodeGroup
      responses:
        "200":
          $ref: "#/components/responses/getNodeGroup"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - nodeGroup
    delete:
      description: Delete a node group from a cluster
      operationId: deleteNodeGroup
      responses:
        "202":
          $ref: "#/components/responses/deleteNodeGroup"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - nodeGroup
    patch:
      description: Patch an existing node group of a cluster
      operationId: patchNodeGroup
      requestBody:
        $ref: "#/components/requestBodies/patchNodeGroup"
      responses:
        "200":
          $ref: "#/components/responses/patchNodeGroup"
        "401":
          $ref: "#/components/responses/unAuthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "422":
          $ref: "#/components/responses/unProcessableEntity"
        default:
          $ref: "#/components/responses/internalServerError"
      tags:
        - nodeGroup
    parameters:
      - $ref: "#/components/parameters/uuid"
      - $ref: "#/components/parameters/name"
components:
  parameters:
    uuid:
      description: UUID
      in: path
      name: uuid
      required: true
      schema:
        $ref: "#/components/schemas/uuid"
      x-go-name: "parameterUuid"
    name:
      description: Name
      in: path
      name: name
      required: true
      schema:
        $ref: "#/components/schemas/name"
      x-go-name: "parameterName"
  requestBodies:
    postCluster:
      content:
        application/json:
          example:
            name: example-cluster
            network: 33333333-3333-3333-333333333333
            network_cidr: 172.16.0.0/24
            node_groups:
              - count: 4
                kubelet_args:
                  - key: log-flush-frequency
                    value: 5s
                labels:
                  - key: managedBy
                    value: exampleDevelopmentTeam
                  - key: environment
                    value: development
                name: small
                plan: K8S-2xCPU-4GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: development
              - count: 8
                kubelet_args:
                  - key: log-flush-frequency
                    value: 15s
                labels:
                  - key: managedBy
                    value: exampleStagingTeam
                  - key: environment
                    value: staging
                name: medium
                plan: K8S-4xCPU-8GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: staging
            zone: de-fra1
          schema:
            $ref: "#/components/schemas/cluster"
      description: postCluster requestBody
    patchNodeGroup:
      content:
        application/json:
          example:
            count: 16
          schema:
            properties:
              count:
                $ref: "#/components/schemas/count"
            required:
              - count
      description: patchNodeGroup requestBody
      x-go-name: "patchNodeGroupRequest"
    postNodeGroup:
      content:
        application/json:
          example:
            count: 4
            kubelet_args:
              - key: log-flush-frequency
                value: 5s
            labels:
              - key: managedBy
                value: exampleDevelopmentTeam
              - key: environment
                value: development
            name: small
            plan: K8S-2xCPU-4GB
            ssh_keys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
            storage: 01000000-0000-4000-8000-000160010100
            taints:
              - effect: NoSchedule
                key: environment
                value: development
          schema:
            $ref: "#/components/schemas/nodeGroup"
      description: postNodeGroup requestBody
  responses:
    badRequest:
      content:
        application/json:
          example:
            error:
              error_code: InvalidRequest
              error_message: payload validation failed
          schema:
            properties:
              error:
                $ref: "#/components/schemas/error"
            required:
              - error
      description: 400 Bad request
    deleteCluster:
      content:
        application/json:
          example:
            message: "deletion started for cluster 11111111-1111-1111-1111-1111"
          schema:
            properties:
              message:
                $ref: "#/components/schemas/message"
            type: object
      description: 202 deleteCluster response
    deleteNodeGroup:
      content:
        application/json:
          example:
            message: "deletion started for node group 'small'"
          schema:
            properties:
              message:
                $ref: "#/components/schemas/message"
            type: object
      description: 202 deleteNodeGroup response
    getCluster:
      content:
        application/json:
          example:
            name: example-cluster
            network: 33333333-3333-3333-333333333333
            network_cidr: 172.16.0.0/24
            node_groups:
              - count: 4
                kubelet_args:
                  - key: log-flush-frequency
                    value: 5s
                labels:
                  - key: managedBy
                    value: exampleDevelopmentTeam
                  - key: environment
                    value: development
                name: small
                plan: K8S-2xCPU-4GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                state: running
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: development
              - count: 8
                kubelet_args:
                  - key: log-flush-frequency
                    value: 15s
                labels:
                  - key: managedBy
                    value: exampleStagingTeam
                  - key: environment
                    value: staging
                name: medium
                plan: K8S-4xCPU-8GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                state: pending
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: staging
            uuid: 11111111-1111-1111-1111-111111111111
            state: running
            zone: de-fra1
          schema:
            $ref: "#/components/schemas/cluster"
      description: 200 getCluster response
    getClusterKubeconfig:
      content:
        application/json:
          example:
            kubeconfig: "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: FAKEBASE64=\n    server: https://server\n  name: example-cluster\ncontexts:\n- context:\n    cluster: example-cluster\n    user: example-cluster-admin\n  name: example-cluster-admin@example-cluster\ncurrent-context: example-cluster-admin@example-cluster\nkind: Config\npreferences: {}\nusers:\n- name: example-cluster-admin\n  user:\n    client-certificate-data: FAKEBASE64=\n    client-key-data: FAKEBASE64=\n"
          schema:
            properties:
              kubeconfig:
                $ref: "#/components/schemas/kubeconfig"
            required:
              - kubeconfig
            type: object
      description: 200 getClusterKubeconfig response
    getNodeGroup:
      content:
        application/json:
          example:
            count: 4
            kubelet_args:
              - key: log-flush-frequency
                value: 5s
            labels:
              - key: managedBy
                value: exampleDevelopmentTeam
              - key: environment
                value: development
            name: small
            plan: K8S-2xCPU-4GB
            ssh_keys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
            state: running
            storage: 01000000-0000-4000-8000-000160010100
            taints:
              - effect: NoSchedule
                key: environment
                value: development
          schema:
            $ref: "#/components/schemas/nodeGroup"
      description: 200 getNodeGroup response
    getNodeGroups:
      content:
        application/json:
          example:
            - count: 4
              kubelet_args:
                - key: log-flush-frequency
                  value: 5s
              labels:
                - key: managedBy
                  value: exampleDevelopmentTeam
                - key: environment
                  value: development
              name: small
              plan: K8S-2xCPU-4GB
              ssh_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
              state: running
              storage: 01000000-0000-4000-8000-000160010100
              taints:
                - effect: NoSchedule
                  key: environment
                  value: development
            - count: 8
              kubelet_args:
                - key: log-flush-frequency
                  value: 15s
              labels:
                - key: managedBy
                  value: exampleStagingTeam
                - key: environment
                  value: staging
              name: medium
              plan: K8S-4xCPU-8GB
              ssh_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
              state: pending
              storage: 01000000-0000-4000-8000-000160010100
              taints:
                - effect: NoSchedule
                  key: environment
                  value: staging
          schema:
            $ref: "#/components/schemas/nodeGroups"
      description: 200 getNodeGroups response
    getClusters:
      content:
        application/json:
          example:
            - name: example-cluster
              network: 33333333-3333-3333-333333333333
              network_cidr: 172.16.0.0/24
              node_groups:
                - count: 4
                  kubelet_args:
                    - key: log-flush-frequency
                      value: 5s
                  labels:
                    - key: managedBy
                      value: exampleDevelopmentTeam
                    - key: environment
                      value: development
                  name: small
                  plan: K8S-2xCPU-4GB
                  ssh_keys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                  state: running
                  storage: 01000000-0000-4000-8000-000160010100
                  taints:
                    - effect: NoSchedule
                      key: environment
                      value: development
                - count: 8
                  kubelet_args:
                    - key: log-flush-frequency
                      value: 15s
                  labels:
                    - key: managedBy
                      value: exampleStagingTeam
                    - key: environment
                      value: staging
                  name: medium
                  plan: K8S-4xCPU-8GB
                  ssh_keys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                  state: pending
                  storage: 01000000-0000-4000-8000-000160010100
                  taints:
                    - effect: NoSchedule
                      key: environment
                      value: staging
              uuid: 11111111-1111-1111-1111-111111111111
              state: running
              zone: de-fra1
            - name: another-example-cluster
              network: another33333333-3333-3333-333333333333
              network_cidr: 172.16.0.0/24
              node_groups:
                - count: 4
                  name: large
                  plan: K8S-8xCPU-32GB
                  ssh_keys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                  state: running
                  storage: 01000000-0000-4000-8000-000160010100
              uuid: 22222222-2222-2222-2222-222222222222
              state: pending
              zone: de-fra1
          schema:
            $ref: "#/components/schemas/clusters"
      description: 200 getClusters response
    internalServerError:
      content:
        application/json:
          example:
            error:
              error_code: GenericError
              error_message: Internal server error
          schema:
            properties:
              error:
                $ref: "#/components/schemas/error"
            required:
              - error
      description: 500 Internal server error
    notFound:
      content:
        application/json:
          example:
            error:
              error_code: NotFound
              error_message: No cluster found
          schema:
            properties:
              error:
                $ref: "#/components/schemas/error"
            required:
              - error
      description: 404 Not found
    postCluster:
      content:
        application/json:
          example:
            name: example-cluster
            network: 33333333-3333-3333-333333333333
            network_cidr: 172.16.0.0/24
            node_groups:
              - count: 4
                kubelet_args:
                  - key: log-flush-frequency
                    value: 5s
                labels:
                  - key: managedBy
                    value: exampleDevelopmentTeam
                  - key: environment
                    value: development
                name: example-node-group-small
                plan: K8S-2xCPU-4GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                state: pending
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: development
              - count: 8
                kubelet_args:
                  - key: log-flush-frequency
                    value: 15s
                labels:
                  - key: managedBy
                    value: exampleStagingTeam
                  - key: environment
                    value: staging
                name: example-node-group-medium
                plan: K8S-4xCPU-8GB
                ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
                state: pending
                storage: 01000000-0000-4000-8000-000160010100
                taints:
                  - effect: NoSchedule
                    key: environment
                    value: staging
            uuid: 11111111-1111-1111-1111-111111111111
            state: pending
            zone: de-fra1
          schema:
            $ref: "#/components/schemas/cluster"
      description: 201 postCluster response
    patchNodeGroup:
      content:
        application/json:
          example:
            count: 16
            kubelet_args:
              - key: log-flush-frequency
                value: 5s
            labels:
              - key: managedBy
                value: exampleDevelopmentTeam
              - key: environment
                value: development
            name: small
            plan: K8S-2xCPU-4GB
            ssh_keys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
            state: running
            storage: 01000000-0000-4000-8000-000160010100
            taints:
              - effect: NoSchedule
                key: environment
                value: development
          schema:
            $ref: "#/components/schemas/nodeGroup"
      description: 200 patchNodeGroup response
    postNodeGroup:
      content:
        application/json:
          example:
            count: 4
            kubelet_args:
              - key: log-flush-frequency
                value: 5s
            labels:
              - key: managedBy
                value: exampleDevelopmentTeam
              - key: environment
                value: development
            name: small
            plan: K8S-2xCPU-4GB
            ssh_keys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCDxPPyWRTVHYOOaCE/gqDzcdJFZdo1mD8k+BBvZ4an/khT+rzJGT/K1kvxs1vS1AMzaVbuWH1bLVk8XVDVJ3J7Rf76E50O1mj3+SWW81bjneVlAxw7DRoxZInFio7TMFTt6eSRkOGQ2GVpvkePgunVZsk+XE13fSnthqS1TiiivnmaNXsaVIOSZICzTWVKqRz1XVR4fdyKJxEpFhHCIu0ui9SeB887IdcS3KshvNqJo3Jm0LmBLL1vzcbucc7T02wiqvdDSPO7TO8Wlc7sJXwmMImEDBkPYQTHmeOqsKbW0OiGuJniwg93pBt0BqNhn3gxtYLrmjha+PqO9gVR6XkV
            state: pending
            storage: 01000000-0000-4000-8000-000160010100
            taints:
              - effect: NoSchedule
                key: environment
                value: development
          schema:
            $ref: "#/components/schemas/nodeGroup"
      description: 201 postNodeGroup response
    unAuthorized:
      content:
        application/json:
          example:
            error:
              error_code: InvalidCredentials
              error_message: Authentication failed using the given username and password.
          schema:
            properties:
              error:
                $ref: "#/components/schemas/error"
            required:
              - error
      description: 401 Unauthorized
    unProcessableEntity:
      content:
        application/json:
          example:
            error:
              error_code: InvalidRequest
              error_message: zone is not valid
          schema:
            properties:
              error:
                $ref: "#/components/schemas/error"
            required:
              - error
      description: 422 Unprocessable entity
  schemas:
    cluster:
      description: Kubenernetes cluster
      properties:
        name:
          $ref: "#/components/schemas/name"
        network:
          $ref: "#/components/schemas/network"
        network_cidr:
          $ref: "#/components/schemas/networkCIDR"
        node_groups:
          $ref: "#/components/schemas/nodeGroups"
        state:
          allOf:
            - $ref: "#/components/schemas/clusterState"
          readOnly: true
        uuid:
          allOf:
            - $ref: "#/components/schemas/uuid"
          readOnly: true
        zone:
          $ref: "#/components/schemas/zone"
      required:
        - name
        - network
        - zone
      type: object
    clusters:
      description: List of Kubernetes clusters
      items:
        $ref: "#/components/schemas/cluster"
      type: array
    clusterState:
      description: Cluster operational state
      enum:
        - failed
        - pending
        - running
        - terminated
        - terminating
        - unknown
      type: string
    count:
      description: Amount of nodes in a node group
      format: int64
      maximum: 16
      minimum: 0
      type: integer
    description:
      description: Plan description
      type: string
    effect:
      description: Taint effect
      enum:
        - NoExecute
        - NoSchedule
        - PreferNoSchedule
      type: string
    error:
      description: Response error
      properties:
        error_code:
          $ref: "#/components/schemas/errorCode"
        error_message:
          $ref: "#/components/schemas/errorMessage"
      required:
        - error_code
        - error_message
      type: object
    errorCode:
      description: Error code to identify the error type
      type: string
    errorMessage:
      description: Error message
      type: string
    key:
      description: Key of a key-value pair
      pattern: ^[a-zA-Z0-9]+$
      type: string
    kubeconfig:
      description: Kubeconfig
      type: string
    kubeletArg:
      description: Kubelet argument presented as key-value pair
      properties:
        key:
          $ref: "#/components/schemas/key"
        value:
          $ref: "#/components/schemas/value"
      required:
        - key
        - value
      type: object
    kubeletArgs:
      description: List of Kubelet arguments
      items:
        $ref: "#/components/schemas/kubeletArg"
      type: array
    label:
      description: Label for identifying node groups, presented as key-value pair
      properties:
        key:
          $ref: "#/components/schemas/key"
        value:
          $ref: "#/components/schemas/value"
      required:
        - key
      type: object
    labels:
      description: List of labels
      items:
        $ref: "#/components/schemas/label"
      type: array
      uniqueItems: true
    message:
      description: Message
      type: string
    name:
      description: Name
      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      type: string
    network:
      description: Network UUID
      minLength: 1
      type: string
    networkCIDR:
      description: CIDR of the given network
      type: string
    nodeGroup:
      description: Node group for a Kubernetes cluster
      properties:
        count:
          $ref: "#/components/schemas/count"
        kubelet_args:
          $ref: "#/components/schemas/kubeletArgs"
        labels:
          $ref: "#/components/schemas/labels"
        name:
          $ref: "#/components/schemas/name"
        plan:
          $ref: "#/components/schemas/description"
        ssh_keys:
          $ref: "#/components/schemas/sshKeys"
        state:
          allOf:
            - $ref: "#/components/schemas/nodeGroupState"
          readOnly: true
        storage:
          $ref: "#/components/schemas/storage"
        taints:
          $ref: "#/components/schemas/taints"
        anti_affinity:
          $ref: "#/components/schemas/antiAffinity"
      required:
        - count
        - name
        - plan
      type: object
    nodeGroups:
      description: List of node groups
      items:
        $ref: "#/components/schemas/nodeGroup"
      maxItems: 16
      minItems: 0
      type: array
      uniqueItems: true
    nodeGroupState:
      description: Node group operational state
      enum:
        - failed
        - pending
        - running
        - terminating
        - unknown
      type: string
    sshKey:
      description: Public SSH key for accessing the nodes in a group
      pattern: ^ssh-[0-9A-Za-z]+ AAAA[0-9A-Za-z+/]+[=]{0,3}[ ]?([^@]+@[^@]+)?$
      type: string
    sshKeys:
      description: List of public SSH keys
      items:
        $ref: "#/components/schemas/sshKey"
      type: array
      uniqueItems: true
    storage:
      description: Storage UUID to use as a template
      format: uuid
      type: string
    taint:
      description: Kubernetes taint to assign to nodes in a group
      properties:
        effect:
          $ref: "#/components/schemas/effect"
        key:
          $ref: "#/components/schemas/key"
        value:
          $ref: "#/components/schemas/value"
      required:
        - effect
        - key
        - value
      type: object
    taints:
      description: List of taints
      items:
        $ref: "#/components/schemas/taint"
      type: array
    uuid:
      description: UUID
      format: uuid
      type: string
    value:
      description: Value of a key-value pair
      maxLength: 255
      minLength: 0
      type: string
    zone:
      description: UpCloud zone to provision the Kubernetes cluster in
      minLength: 1
      type: string
    antiAffinity:
      description: Enable anti-affinity policies
      type: boolean
      default: false
tags:
  - description: Cluster operations
    name: cluster
  - description: Node group operations
    name: nodeGroup

